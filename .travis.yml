language: go

go: 1.x

install: go build -o otscli

before_deploy:
  - PLATFORMS=(darwin/amd64 linux/amd64 windows/amd64)

 # build binary for all archs
  - |
    for PLATFORM in "${PLATFORMS[@]}"; do
      echo "Building $PLATFORM"
      GOOS=${PLATFORM%/*}
      GOARCH=${PLATFORM#*/}

      if [ "$GOOS" = "windows" ]; then
        build_cmd="GOOS=$GOOS GOARCH=$GOARCH go build -o otscli.exe -ldflags '-w -s'"
      else
        build_cmd="CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o otscli -ldflags '-d -w -s'"
      fi
      if ! eval $build_cmd; then
        echo "Failed building otscli for $PLATFORM" && return 1
      fi

      if [ "$GOOS" = "windows" ]; then
        zip otscli-${GOOS}-${GOARCH}.zip otscli
      else
        tar cvzf otscli-${GOOS}-${GOARCH}.tgz otscli
      fi
    done

  - ls

deploy:
  provider: releases
  api_key: $AUTH_TOKEN
  file:
    - "otscli-darwin-amd64.tgz"

    - "otscli-linux-amd64.tgz"

    - "otscli-windows-amd64.zip"

  skip_cleanup: true
  on:
    tags: true

notifications:
  webhooks: https://fathomless-fjord-24024.herokuapp.com/notify
